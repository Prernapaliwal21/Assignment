{
  "_args": [
    [
      {
        "raw": "native-mongo-util@^2.3.2",
        "scope": null,
        "escapedName": "native-mongo-util",
        "name": "native-mongo-util",
        "rawSpec": "^2.3.2",
        "spec": ">=2.3.2 <3.0.0",
        "type": "range"
      },
      "/home/prerna/Desktop/Assignment"
    ]
  ],
  "_from": "native-mongo-util@^2.3.2",
  "_hasShrinkwrap": false,
  "_id": "native-mongo-util@2.3.2",
  "_location": "/native-mongo-util",
  "_nodeVersion": "10.16.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/native-mongo-util_2.3.2_1563193035291_0.49345194203996745"
  },
  "_npmUser": {
    "name": "saggiyogesh",
    "email": "saggiyogesh@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "native-mongo-util@^2.3.2",
    "scope": null,
    "escapedName": "native-mongo-util",
    "name": "native-mongo-util",
    "rawSpec": "^2.3.2",
    "spec": ">=2.3.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/native-mongo-util/-/native-mongo-util-2.3.2.tgz",
  "_shasum": "7be12f70639aaf2da02cab008c40a7c5b86f8b70",
  "_shrinkwrap": null,
  "_spec": "native-mongo-util@^2.3.2",
  "_where": "/home/prerna/Desktop/Assignment",
  "author": "",
  "bugs": {
    "url": "https://github.com/saggiyogesh/native-mongo-util/issues"
  },
  "dependencies": {
    "bluebird": "^3.5.5",
    "logger3000": "0.1.1",
    "memoizee": "^0.4.14",
    "mongodb": "^3.2.7",
    "then-sleep": "^1.0.1"
  },
  "description": "Utility package to connect multiple mongo databases.",
  "devDependencies": {
    "ava": "^2.1.0",
    "babel-eslint": "^10.0.2",
    "eslint": "^6.0.1",
    "eslint-config-lil": "^1.0.6",
    "eslint-config-prettier": "^6.0.0",
    "eslint-config-xo-space": "^0.21.0",
    "eslint-plugin-prettier": "^3.1.0",
    "event-stream": ">=4.0.1",
    "nodemon": "^1.19.1",
    "prettier": "^1.18.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-yjU4pHLXm2LZU3dBTy/i5EBDShj307nooL6ERnsqG4hXQRgOIkiALv+o7Pp2o5pPEY4bl8oIuRcNwnCCqR5P3A==",
    "shasum": "7be12f70639aaf2da02cab008c40a7c5b86f8b70",
    "tarball": "https://registry.npmjs.org/native-mongo-util/-/native-mongo-util-2.3.2.tgz",
    "fileCount": 8,
    "unpackedSize": 11350,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLG7MCRA9TVsSAnZWagAAHxoP/39AKK7TnVwxDuE2fvqV\nBdYOKz2M8GAU7MKM5kDR6hKlo3fiY9zxydOjL0ZvOqy2gQnNFc0LYmL8Irvl\nMwvWZvC3Gbktxu0eIWucsNTK6+mmDxPhrcr8X/O0SS6ylYIgnuTFmBVXTuVE\npaH75mF9YrwIxtHD5Z87HgQjKMIKs0zs3GEEZeeujbyddk+UyWP6HWMnKoCn\neWQRvFK9Cc/73XBEgg44o5g6B6uc6ppt2s/baZwoWk1cxJPnA/pVs5bW+JvG\nXI/zv/DwM4kMX+YuGZsNtseRa3MWstaW0fWWXaVx7cZpK2p+zG+EaUa8e4uz\n2xkwYEB1Da11/jWh5gGiIymy2RodH/Jv/3N1Vi1gdlhbH8Prwe22EQ+/hFbT\nPwUndNF8KK1h7JLsdtiwcMKjaXdGZdM9C4agEjGWExDduFzfV/Vky4ML8y+p\noCqhLkcnBafnRWQbZ3nlSm4Cuu5BgCDJ4noAlt7T2R0e/iHDgD2pMnNcz8Kb\n5REox3UjT0+MAM1tNQDbITA1zA097UMrjAXFNolbVhCAvhtiryntmljC7g/F\nS4WfdqvqYAHzW/GpT3sSYXSq/JpSdgdBp2ZNKpLgokIeuT5QxLrkbQQyfdkx\nFhm087hDiPZqsZsa4waiusL6Hq2OuI+ZIWc7+2XUELgQpWjTB+PCmq5Zh+Vz\nq56G\r\n=HBiG\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "29a688d3d51e358c668af1de4f67a05b9b7a52a0",
  "homepage": "https://github.com/saggiyogesh/native-mongo-util#readme",
  "keywords": [],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "saggiyogesh",
      "email": "saggiyogesh@gmail.com"
    }
  ],
  "name": "native-mongo-util",
  "optionalDependencies": {},
  "readme": "# native-mongo-util\n\nUtility package to connect multiple mongo databases.\n\n## Usage\n\n- Connect single db by configuring mongdb url in `MONGO_URL` env var.\n\n  ```\n  export MONGO_URL=mongodb://localhost/test\n  ```\n\n  Code to connect the above db & get mongo collection instance.\n\n  ```javascript\n  const { connect, getCollection } = require('native-mongo-util');\n\n  (async () => {\n    try {\n      await connect({ poolSize: 20 }); // connect to db with options to MongoClient\n\n      const userCollection = getCollection('user');\n      const allUsers = userCollection.find().toArray();\n      console.log(allUsers);\n    } catch (err) {\n      console.log('Error ocurred while connecting DB', err);\n      throw err;\n    }\n  })();\n  ```\n\n- Connecting other mongo db\n\n  ```javascript\n  const { newConnection } = require('native-mongo-util');\n\n  (async () => {\n    try {\n      const mongoURL = 'mongodb://localhost/someOtherDB';\n      const connection = newConnection(mongoURL, { poolSize: 20 }); // Provide mongo uri & MongoClient options\n      await connection.connect(); // connect to someOtherDB\n\n      const studentsCollection = connection.getCollection('students'); // get students collection from someOtherDB connection.\n\n      const allUsers = studentsCollection.find().toArray();\n      console.log(allUsers);\n    } catch (err) {\n      console.log('Error ocurred while connecting DB', err);\n      throw err;\n    }\n  })();\n  ```\n\n## API\n\n- `exports.newConnection(mongoURL, options)` Function will create & return new `Connection` class instance. `mongoURL` is valid mongodb connection string. `options` is MongoClient options\n- `async exports.connect(options)` Async function that connects to mongodb, using `MONGO_URL` env var. MongoClient `options` can also be passed. Returns Mongodb `DB` class instance\n- `exports.getCollection(collectionName)` Returns Mongodb collection (`Collection` instance) for `collectionName`.\n- `async exports.getClient()` Returns Mongodb `MongoClient` class instance\n- `exports.getDBName()` Returns connected mongodb name\n\n- Class **Connection** methods\n  - `constructor(mongoURL, options)` Valid mongodb connection string and MongoClient options\n  - `async connect()` Async method connects to mongodb, using `mongoURL` for the same instance. Returns Mongodb `DB` class instance\n  - `getCollection(collectionName)` Returns mongodb collection.\n  - `getDBName()` Returns db name\n  - `async getClient()` Returns Mongodb `MongoClient` instance.\n\n[![Build Status](https://travis-ci.org/saggiyogesh/native-mongo-util.svg?branch=master)](https://travis-ci.org/saggiyogesh/native-mongo-util)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/saggiyogesh/native-mongo-util.git"
  },
  "scripts": {
    "format": "prettier --write 'index.js'",
    "lint": "eslint index.js",
    "test": "ava test.js"
  },
  "version": "2.3.2"
}
