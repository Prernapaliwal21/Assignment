{
  "_args": [
    [
      {
        "raw": "unpack-string@0.0.2",
        "scope": null,
        "escapedName": "unpack-string",
        "name": "unpack-string",
        "rawSpec": "0.0.2",
        "spec": "0.0.2",
        "type": "version"
      },
      "/home/prerna/Desktop/Assignment/node_modules/inspect-parameters-declaration"
    ]
  ],
  "_from": "unpack-string@0.0.2",
  "_id": "unpack-string@0.0.2",
  "_inCache": true,
  "_location": "/unpack-string",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/unpack-string-0.0.2.tgz_1495985333445_0.9716165228746831"
  },
  "_npmUser": {
    "name": "diegozoracky",
    "email": "diego.zoracky@gmail.com"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "unpack-string@0.0.2",
    "scope": null,
    "escapedName": "unpack-string",
    "name": "unpack-string",
    "rawSpec": "0.0.2",
    "spec": "0.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "/inspect-function",
    "/inspect-parameters-declaration",
    "/inspect-property/inspect-function",
    "/inspect-property/inspect-parameters-declaration",
    "/inspect-property/inspect-parameters-declaration/inspect-function",
    "/object-to-arguments",
    "/object-to-arguments/inspect-parameters-declaration",
    "/stringify-parameters"
  ],
  "_resolved": "https://registry.npmjs.org/unpack-string/-/unpack-string-0.0.2.tgz",
  "_shasum": "302ecf08238b0139bd434a4d7fd67cdf33ca275d",
  "_shrinkwrap": null,
  "_spec": "unpack-string@0.0.2",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/inspect-parameters-declaration",
  "author": {
    "name": "Diego ZoracKy",
    "email": "diego.zoracky@gmail.com",
    "url": "https://github.com/DiegoZoracKy/"
  },
  "dependencies": {},
  "description": "Unpacks the content found within a text, delimited by an opening char and a closing char, e.g., 'Can extract (only the content found here within these parentheses)'",
  "devDependencies": {
    "chai": "^4.0.0",
    "mocha": "^3.4.2"
  },
  "directories": {},
  "dist": {
    "shasum": "302ecf08238b0139bd434a4d7fd67cdf33ca275d",
    "tarball": "https://registry.npmjs.org/unpack-string/-/unpack-string-0.0.2.tgz"
  },
  "gitHead": "f9c859bb35ee13c50f1e75ab2fc3e36cce9a0f86",
  "keywords": [
    "unpack",
    "string",
    "brackets",
    "parentheses"
  ],
  "license": "MIT",
  "main": "lib/unpack-string.js",
  "maintainers": [
    {
      "name": "diegozoracky",
      "email": "diego.zoracky@gmail.com"
    }
  ],
  "name": "unpack-string",
  "optionalDependencies": {},
  "readme": "# unpack-string\n\n[![Build Status](https://api.travis-ci.org/DiegoZoracKy/unpack-string.svg)](https://travis-ci.org/DiegoZoracKy/unpack-string)\n\nUnpacks the content found within a text, delimited by an opening char and a closing char, e.g., *'Can extract (**only the content found here within these parentheses**)'*\n\n**Node.js** and **Browser** ready.\n\n## Installation\n\n```bash\nnpm install unpack-string\n```\n\n## Usage\n\nIt will extract the content found within the *opening char* and the *closing char* defined as parameters. If the parameter **openingChar** is not passed in, it will try to guess the first occurrence of some of these known chars `'([{<'`, and, when the parameter **closingChar** is not passed in, it will try to guess some of these chars `')]}>'`, to match the **openingChar**.\n\n## Examples\n\n```javascript\nconst unpackString = require('unpack-string');\n\nconst str = 'Can extract (only the content [found {here} within] these parentheses)!!';\n\n{\n\tconst result = unpackString(str);\n\n\t// Guessing openingChar and closingChar. \"()\" in that case.\n\t// result === 'only the content [found {here} within] these parentheses'\n}\n\n{\n\tconst openingChar = '[';\n\tconst result = unpackString(str, openingChar);\n\n\t// Guessing closingChar: \"]\"\n\t// result === 'found {here} within'\n}\n\n{\n\tconst openingChar = '{';\n\tconst closingChar = ']';\n\tconst result = unpackString(str, openingChar, closingChar);\n\n\t// Defining any openingChar and closingChar\n\t// result === 'here} within'\n}\n```",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha ./test/main.test.js"
  },
  "version": "0.0.2"
}
