{
  "_args": [
    [
      {
        "raw": "regjsgen@^0.6.0",
        "scope": null,
        "escapedName": "regjsgen",
        "name": "regjsgen",
        "rawSpec": "^0.6.0",
        "spec": ">=0.6.0 <0.7.0",
        "type": "range"
      },
      "/home/prerna/Desktop/Assignment/node_modules/regexpu-core"
    ]
  ],
  "_from": "regjsgen@^0.6.0",
  "_hasShrinkwrap": false,
  "_id": "regjsgen@0.6.0",
  "_location": "/regjsgen",
  "_nodeVersion": "16.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/regjsgen_0.6.0_1633097413945_0.6082941976483329"
  },
  "_npmUser": {
    "name": "bnjmnt4n",
    "email": "benjamin@dev.ofcr.se"
  },
  "_npmVersion": "7.24.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "regjsgen@^0.6.0",
    "scope": null,
    "escapedName": "regjsgen",
    "name": "regjsgen",
    "rawSpec": "^0.6.0",
    "spec": ">=0.6.0 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/regexpu-core"
  ],
  "_resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.6.0.tgz",
  "_shasum": "83414c5354afd7d6627b16af5f10f41c4e71808d",
  "_shrinkwrap": null,
  "_spec": "regjsgen@^0.6.0",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/regexpu-core",
  "author": {
    "name": "Benjamin Tan",
    "url": "https://ofcr.se/"
  },
  "bugs": {
    "url": "https://github.com/bnjmnt4n/regjsgen/issues"
  },
  "dependencies": {},
  "description": "Generate regular expressions from regjsparser’s AST.",
  "devDependencies": {
    "codecov": "^3.8.3",
    "nyc": "^15.1.0",
    "regjsparser": "^0.7.0",
    "request": "^2.88.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ozE883Uigtqj3bx7OhL1KNbCzGyW2NQZPl6Hs09WTvCuZD5sTI4JY58bkbQWa/Y9hxIsvJ3M8Nbf7j54IqeZbA==",
    "shasum": "83414c5354afd7d6627b16af5f10f41c4e71808d",
    "tarball": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.6.0.tgz",
    "fileCount": 4,
    "unpackedSize": 14738
  },
  "files": [
    "LICENSE-MIT.txt",
    "regjsgen.js"
  ],
  "gitHead": "f671ce7461dde54583965041c6571ecd57ed614e",
  "homepage": "https://github.com/bnjmnt4n/regjsgen",
  "keywords": [
    "ast",
    "generate",
    "regex",
    "regexp",
    "regular expressions"
  ],
  "license": "MIT",
  "main": "regjsgen.js",
  "maintainers": [
    {
      "name": "bnjmnt4n",
      "email": "benjamin@dev.ofcr.se"
    }
  ],
  "name": "regjsgen",
  "optionalDependencies": {},
  "readme": "# regjsgen [![Build status][ci-img]][ci] [![Code coverage status][codecov-img]][codecov]\n\nGenerate regular expressions from [regjsparser][regjsparser]’s AST.\n\n## Installation\n\n```sh\nnpm i regjsgen\n```\n\n## API\n\n### `regjsgen.generate(ast)`\n\nThis function accepts an abstract syntax tree representing a regular expression (see [regjsparser][regjsparser]), and returns the generated regular expression string.\n\n```js\nconst regjsparser = require('regjsparser');\nconst regjsgen = require('regjsgen');\n\n// Generate an AST with `regjsparser`.\nlet ast = regjsparser.parse(regex);\n\n// Modify AST\n// …\n\n// Generate `RegExp` string with `regjsgen`.\nlet regex = regjsgen.generate(ast);\n```\n\n## Support\n\nTested in Node.js 10, 12, 14, and 16.<br>\nCompatible with regjsparser v0.7.0’s AST.\n\n\n[ci]: https://github.com/bnjmnt4n/regjsgen/actions\n[ci-img]: https://github.com/bnjmnt4n/regjsgen/workflows/Node.js%20CI/badge.svg\n[codecov]: https://codecov.io/gh/bnjmnt4n/regjsgen\n[codecov-img]: https://codecov.io/gh/bnjmnt4n/regjsgen/branch/master/graph/badge.svg\n[regjsparser]: https://github.com/jviereck/regjsparser\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bnjmnt4n/regjsgen.git"
  },
  "scripts": {
    "coverage": "nyc --reporter=html npm test",
    "report-coverage": "nyc --reporter=lcov npm test && codecov",
    "test": "node tests/tests.js",
    "update-fixtures": "node tests/update-fixtures.js"
  },
  "version": "0.6.0"
}
