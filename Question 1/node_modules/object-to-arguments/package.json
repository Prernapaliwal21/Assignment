{
  "_args": [
    [
      {
        "raw": "object-to-arguments@0.0.8",
        "scope": null,
        "escapedName": "object-to-arguments",
        "name": "object-to-arguments",
        "rawSpec": "0.0.8",
        "spec": "0.0.8",
        "type": "version"
      },
      "/home/prerna/Desktop/Assignment/node_modules/cliss"
    ]
  ],
  "_from": "object-to-arguments@0.0.8",
  "_id": "object-to-arguments@0.0.8",
  "_inCache": true,
  "_location": "/object-to-arguments",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/object-to-arguments-0.0.8.tgz_1505603001502_0.4938776553608477"
  },
  "_npmUser": {
    "name": "diegozoracky",
    "email": "diego.zoracky@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {
    "commander": "2.20.3",
    "get-stdin": "5.0.1",
    "inspect-function": "0.2.2",
    "pipe-functions": "1.3.0",
    "split-skip": "0.0.2",
    "stringify-parameters": "0.0.4",
    "unpack-string": "0.0.2"
  },
  "_requested": {
    "raw": "object-to-arguments@0.0.8",
    "scope": null,
    "escapedName": "object-to-arguments",
    "name": "object-to-arguments",
    "rawSpec": "0.0.8",
    "spec": "0.0.8",
    "type": "version"
  },
  "_requiredBy": [
    "/cliss"
  ],
  "_resolved": "https://registry.npmjs.org/object-to-arguments/-/object-to-arguments-0.0.8.tgz",
  "_shasum": "cf4b1f8afc6873d341622b7cb0811d8d0ace5886",
  "_shrinkwrap": null,
  "_spec": "object-to-arguments@0.0.8",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/cliss",
  "author": {
    "name": "Diego ZoracKy",
    "email": "diego.zoracky@gmail.com",
    "url": "https://github.com/DiegoZoracKy/"
  },
  "bin": {
    "object-to-arguments": "./bin/cli.js"
  },
  "dependencies": {
    "inspect-parameters-declaration": "0.0.10",
    "magicli": "0.0.5",
    "split-skip": "0.0.2",
    "stringify-parameters": "0.0.4",
    "unpack-string": "0.0.2"
  },
  "description": "Transforms object's properties into an array of arguments tailored for a specific function, respecting the expected order and handling destructuring and rest parameters when needed.",
  "devDependencies": {
    "mocha": "^3.5.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-BfWfuAwuhdH1bhMG5EG90WE/eckkBhBvnke8eSEkCDXoLE9Jk5JwYGTbCx1ehGwV48HvBkn62VukPBdlMUOY9w==",
    "shasum": "cf4b1f8afc6873d341622b7cb0811d8d0ace5886",
    "tarball": "https://registry.npmjs.org/object-to-arguments/-/object-to-arguments-0.0.8.tgz"
  },
  "gitHead": "abc2abc9f181fb646f2f3fdb03b6c50e7de921d5",
  "keywords": [
    "object",
    "parameters",
    "orders"
  ],
  "license": "MIT",
  "main": "./lib/object-to-arguments.js",
  "maintainers": [
    {
      "name": "diegozoracky",
      "email": "diego.zoracky@gmail.com"
    }
  ],
  "name": "object-to-arguments",
  "optionalDependencies": {},
  "readme": "# object-to-arguments\n\n[![Build Status](https://api.travis-ci.org/DiegoZoracKy/object-to-arguments.svg)](https://travis-ci.org/DiegoZoracKy/object-to-arguments) [![npm](https://img.shields.io/npm/v/object-to-arguments.svg)]() [![npm](https://img.shields.io/npm/l/object-to-arguments.svg)]()\n\nTransforms object's properties into an array of arguments tailored for a specific function, respecting the expected **order** and handling **destructuring** and **rest** parameters when needed.\n\n## Installation\n\n```bash\nnpm install object-to-arguments\n```\n\n**CLI**\n```bash\nnpm install object-to-arguments -g\n```\n\n## Usage\n\n`objectToArguments.call(fn, object);`\n\n\n`objectToArguments.call(fn, object);`\n\n * **fn** must be a *function* reference or a function stringified (e.g. `fn.toString()`) for which the arguments array will be created for.\n\n * **object** is a flat *object literal* containing all the parameters names and its desired arguments. Note that in case of destructuring parameters, the object must still be flat, and the engine will create the structure needed for it.\n \t* Every argument defined that is not expected as a parameter will be appended to the end of the arguments array (it will be available to be accessed via *arguments* or via rest parameter *...args*)\n\n## Example\n\n```javascript\nconst objectToArguments = require('object-to-arguments');\n\nconst fn = (a = 'defaultA', b, ...args) => {\n\treturn { a, b, args};\n};\n\nconst objectArgs = {\n\textra1: 'EXTRA1',\n\tb: 'argB',\n\textra2: 'EXTRA2'\n};\n\n// fnArguments = [ undefined, 'argB', 'EXTRA1', 'EXTRA2' ]\nconst fnArguments = objectToArguments(fn, objectArgs);\n\n// fnReturn = { a: 'defaultA', b: 'argB', args: [ 'EXTRA1', 'EXTRA2' ] }\nconst fnReturn = fn(...fnArguments);\n```\n\n**An example with complex *destructuring parameters* and *default values* set in many ways**\n\n```javascript\nconst objectToArguments = require('object-to-arguments');\n\nconst fn = function([a, [b, [c, [d,e] = ['dD', 'dE'] ]]] = ['dA', ['dB', ['dC', ]]], {f} = {}, {g = 'dG'} = {}, {h: {i} = {}} = {},{j: {k = 'dK'} = {}} = {},{l: {m, n: {o} = {}} = {}} = {}, {p,q = 'dQ', r} = {}, [[[s,{t: {u} = {}} = {}]]] = [[[]]], {v: [{w} = {}, x = 'dX'] = []} = {}) {\n\treturn { a, b, c, d, e, f, g, i, k, m, o, p, q, r, s, u, w, x, arguments };\n};\n\nconst objectArgs = {\n\ta: 'aA',\n\tb: 'aB',\n\tc: 'aC',\n\tf: 'aF',\n\tk: 'aK',\n\tp: 'aP',\n\tq: 'aQ',\n\ts: 'aS',\n\tu: 'aU',\n\tv: 'aV',\n\tw: 'aW',\n\tx: 'aX',\n\textra1: 'EXTRA1',\n\textra2: 'EXTRA2'\n};\n\nconst fnArgs = objectToArguments(fn, objectArgs);\nconst fnReturn = fn(...fnArgs);\n\n/////////////////////\n// fnArgs will be: //\n/////////////////////\n// [\n//     [\n//         \"aA\",\n//         [\n//             \"aB\",\n//             [\n//                 \"aC\",\n//                 undefined\n//             ]\n//         ]\n//     ],\n//     {\n//         \"f\": \"aF\"\n//     },\n//     undefined,\n//     undefined,\n//     {\n//         \"j\": {\n//             \"k\": \"aK\"\n//         }\n//     },\n//     undefined,\n//     {\n//         \"p\": \"aP\",\n//         \"q\": \"aQ\"\n//     },\n//     [\n//         [\n//             [\n//                 \"aS\",\n//                 {\n//                     \"t\": {\n//                         \"u\": \"aU\"\n//                     }\n//                 }\n//             ]\n//         ]\n//     ],\n//     {\n//         \"v\": [\n//             {\n//                 \"w\": \"aW\"\n//             },\n//             \"aX\"\n//         ]\n//     },\n//     \"aV\",\n//     \"EXTRA1\",\n//     \"EXTRA2\"\n// ]\n\n\n///////////////////////\n// fnReturn will be: //\n///////////////////////\n// {\n//     \"a\": \"aA\",\n//     \"b\": \"aB\",\n//     \"c\": \"aC\",\n//     \"d\": \"dD\",\n//     \"e\": \"dE\",\n//     \"f\": \"aF\",\n//     \"g\": \"dG\",\n//     \"k\": \"aK\",\n//     \"p\": \"aP\",\n//     \"q\": \"aQ\",\n//     \"s\": \"aS\",\n//     \"u\": \"aU\",\n//     \"w\": \"aW\",\n//     \"x\": \"aX\",\n//     \"arguments\": {\n//         \"0\": [\n//             \"aA\",\n//             [\n//                 \"aB\",\n//                 [\n//                     \"aC\",\n//                     null\n//                 ]\n//             ]\n//         ],\n//         \"1\": {\n//             \"f\": \"aF\"\n//         },\n//         \"4\": {\n//             \"j\": {\n//                 \"k\": \"aK\"\n//             }\n//         },\n//         \"6\": {\n//             \"p\": \"aP\",\n//             \"q\": \"aQ\"\n//         },\n//         \"7\": [\n//             [\n//                 [\n//                     \"aS\",\n//                     {\n//                         \"t\": {\n//                             \"u\": \"aU\"\n//                         }\n//                     }\n//                 ]\n//             ]\n//         ],\n//         \"8\": {\n//             \"v\": [\n//                 {\n//                     \"w\": \"aW\"\n//                 },\n//                 \"aX\"\n//             ]\n//         },\n//         \"9\": \"aV\",\n//         \"10\": \"EXTRA1\",\n//         \"11\": \"EXTRA2\"\n//     }\n// }\n```",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha ./test/main.test.js"
  },
  "version": "0.0.8"
}
