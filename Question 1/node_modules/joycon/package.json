{
  "_args": [
    [
      {
        "raw": "joycon@^2.2.5",
        "scope": null,
        "escapedName": "joycon",
        "name": "joycon",
        "rawSpec": "^2.2.5",
        "spec": ">=2.2.5 <3.0.0",
        "type": "range"
      },
      "/home/prerna/Desktop/Assignment/node_modules/pino-pretty"
    ]
  ],
  "_from": "joycon@^2.2.5",
  "_hasShrinkwrap": false,
  "_id": "joycon@2.2.5",
  "_location": "/joycon",
  "_nodeVersion": "10.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/joycon_2.2.5_1554817204477_0.9368459863339522"
  },
  "_npmUser": {
    "name": "egoist",
    "email": "0x142857@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "joycon@^2.2.5",
    "scope": null,
    "escapedName": "joycon",
    "name": "joycon",
    "rawSpec": "^2.2.5",
    "spec": ">=2.2.5 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pino-pretty"
  ],
  "_resolved": "https://registry.npmjs.org/joycon/-/joycon-2.2.5.tgz",
  "_shasum": "8d4cf4cbb2544d7b7583c216fcdfec19f6be1615",
  "_shrinkwrap": null,
  "_spec": "joycon@^2.2.5",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/pino-pretty",
  "author": {
    "name": "egoist",
    "email": "0x142857@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/egoist/joycon/issues"
  },
  "dependencies": {},
  "description": "Load config with ease.",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@types/json5": "^0.0.29",
    "@types/node": "^9.6.5",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^22.4.3",
    "babel-plugin-sync": "^0.1.0",
    "eslint-config-rem": "^3.0.0",
    "jest-cli": "^22.4.3",
    "xo": "^0.18.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-YqvUxoOcVPnCp0VU1/56f+iKSdvIRJYPznH22BdXV3xMk75SFXhWeJkZ8C9XxUWt1b5x2X1SxuFygW1U0FmkEQ==",
    "shasum": "8d4cf4cbb2544d7b7583c216fcdfec19f6be1615",
    "tarball": "https://registry.npmjs.org/joycon/-/joycon-2.2.5.tgz",
    "fileCount": 5,
    "unpackedSize": 17685,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrKC1CRA9TVsSAnZWagAAiGMQAJsR2UIjNlCnAJyuj/9c\nvTj2vSu0jHZJFaEXo79iDb4JgEZZ4oPtftBHvIRv2t0RPT/9GXYCeJQinZ1m\nLXVYEKJ4J8bQFAfe85FX3+QAXCjGzMQOBKSB3wLHt7cCt8IIDawsq0exo6Yp\nCX/usbCWiWr+EgkmCXmEKB9ABurDcjlFuVOaMEEGQ65/xpnyQvIG9SbV/NEm\ne98uJ3/EFx+52xj4OawJWFl11hmiaSKXwEWN7JuYiCazapQUcpV81rZ77fxc\na3IxL0qjCEjWDl0tDrFWWxoCPgBMwksfdMFkci6jMTgrMATyzEUhGQMuPcGh\n7ahNU29lLme7IwiH24xSb9aCDfCjIuDcb86LpQaUzdMXt8XfJGzpKBB1tfwg\n0vRAV34GNG5CuBJ08JkhBzgQXnT/blmaM+VYWTp13zxyLq+kN4r7xsdyC9zB\nI7CVvifU2NNcSsmxA4GT51r8zI5KxuG+eHtz2vZwJEx2Gff8vmYuAMw18cuP\nFsIgDycy40HsoBRWr2uXFh4djG/1gv9lyQodMRjno+yer5w0tFOx6ilX1vB+\nAJOdOf83nmrH8OPj8rKkF+8rjTHBZD+mnzG6bqcRjQEHEDo/FZIrOljp6yKF\nzqacoL9YCdwRlvh1kPaiFTYmd524SBr08KV2aijnEziv9FJHtaWt5ULv2S1s\nVoE4\r\n=cc4h\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "lib",
    "types/index.d.ts"
  ],
  "gitHead": "345160e1e497785e137420d39cdace85193b17e4",
  "homepage": "https://github.com/egoist/joycon#readme",
  "jest": {
    "testEnvironment": "node"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "egoist",
      "email": "0x142857@gmail.com"
    }
  ],
  "name": "joycon",
  "optionalDependencies": {},
  "readme": "\n# joycon\n\n[![NPM version](https://img.shields.io/npm/v/joycon.svg?style=flat)](https://npmjs.com/package/joycon) [![NPM downloads](https://img.shields.io/npm/dm/joycon.svg?style=flat)](https://npmjs.com/package/joycon) [![install size](https://packagephobia.now.sh/badge?p=joycon@2.0.0)](https://packagephobia.now.sh/result?p=joycon@2.0.0) [![CircleCI](https://circleci.com/gh/egoist/joycon/tree/master.svg?style=shield)](https://circleci.com/gh/egoist/joycon/tree/master)  [![donate](https://img.shields.io/badge/$-donate-ff69b4.svg?maxAge=2592000&style=flat)](https://github.com/egoist/donate) [![chat](https://img.shields.io/badge/chat-on%20discord-7289DA.svg?style=flat)](https://chat.egoist.moe)\n\n## Differences with [cosmiconfig](https://github.com/davidtheclark/cosmiconfig)?\n\nJoyCon is zero-dependency but feature-complete.\n\n## Install\n\n```bash\nyarn add joycon\n```\n\n## Usage\n\n```js\nconst JoyCon = require('joycon')\n\nconst joycon = new JoyCon()\n\njoycon.load(['package-lock.json', 'yarn.lock'])\n.then(result => {\n  // result is {} when files do not exist\n  // otherwise { path, data }\n})\n```\n\nBy default only `.js` and `.json` file are parsed, otherwise raw data will be returned, so you can add custom loader to parse them:\n\n```js\nconst joycon = new JoyCon()\n\njoycon.addLoader({\n  test: /\\.toml$/,\n  load(filepath) {\n    return require('toml').parse(filepath)\n  }\n})\n\njoycon.load(['cargo.toml'])\n```\n\n## API\n\n### constructor([options])\n\n#### options\n\n##### files\n\n- Type: `string[]`\n\nThe files to search.\n\n##### cwd\n\nThe directory to search files.\n\n##### stopDir\n\nThe directory to stop searching.\n\n##### packageKey\n\nYou can load config from certain property in a `package.json` file. For example, when you set `packageKey: 'babel'`, it will load the `babel` property in `package.json` instead of the entire data.\n\n##### parseJSON\n\n- Type: `(str: string) => any`\n- Default: `JSON.parse`\n\nThe function used to parse JSON string.\n\n### resolve([files], [cwd], [stopDir])\n### resolve([options])\n\n`files` defaults to `options.files`.\n\n`cwd` defaults to `options.cwd`.\n\n`stopDir` defaults to `options.stopDir` then `path.parse(cwd).root`.\n\nIf using a single object `options`, it will be the same as constructor options.\n\nSearch files and resolve the path of the file we found.\n\nThere's also `.resolveSync` method.\n\n### load(...args)\n\nThe signature is the same as [resolve](#resolvefiles-cwd-stopdir).\n\nSearch files and resolve `{ path, data }` of the file we found.\n\nThere's also `.loadSync` method.\n\n### addLoader(Loader)\n\n```typescript\ninterface Loader {\n  name?: string\n  test: RegExp\n  load(filepath: string)?: Promise<any>\n  loadSync(filepath: string)?: any\n}\n```\n\nAt least one of `load` and `loadSync` is required, depending on whether you're calling the synchonous methods or not.\n\n### removeLoader(name)\n\nRemove loaders by loader name.\n\n### clearCache()\n\nEach JoyCon instance uses its own cache.\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## Author\n\n**joycon** © [egoist](https://github.com/egoist), Released under the [MIT](./LICENSE) License.<br>\nAuthored and maintained by egoist with help from contributors ([list](https://github.com/egoist/joycon/contributors)).\n\n> [github.com/egoist](https://github.com/egoist) · GitHub [@egoist](https://github.com/egoist) · Twitter [@_egoistlily](https://twitter.com/_egoistlily)\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/egoist/joycon.git",
    "type": "git"
  },
  "scripts": {
    "build": "babel src -d lib --no-comments",
    "lint": "xo",
    "prepublishOnly": "npm run build",
    "test": "npm run lint && jest"
  },
  "types": "types/index.d.ts",
  "version": "2.2.5",
  "xo": {
    "extends": "rem",
    "envs": [
      "jest"
    ],
    "ignores": [
      "lib/**"
    ]
  }
}
