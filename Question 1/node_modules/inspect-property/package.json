{
  "_args": [
    [
      {
        "raw": "inspect-property@0.0.6",
        "scope": null,
        "escapedName": "inspect-property",
        "name": "inspect-property",
        "rawSpec": "0.0.6",
        "spec": "0.0.6",
        "type": "version"
      },
      "/home/prerna/Desktop/Assignment/node_modules/magicli"
    ]
  ],
  "_from": "inspect-property@0.0.6",
  "_id": "inspect-property@0.0.6",
  "_inCache": true,
  "_location": "/inspect-property",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/inspect-property-0.0.6.tgz_1503854265945_0.639726126100868"
  },
  "_npmUser": {
    "name": "diegozoracky",
    "email": "diego.zoracky@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {
    "commander": "2.20.3",
    "get-stdin": "5.0.1",
    "magicli": "0.0.8",
    "pipe-functions": "1.3.0",
    "stringify-parameters": "0.0.4",
    "unpack-string": "0.0.2"
  },
  "_requested": {
    "raw": "inspect-property@0.0.6",
    "scope": null,
    "escapedName": "inspect-property",
    "name": "inspect-property",
    "rawSpec": "0.0.6",
    "spec": "0.0.6",
    "type": "version"
  },
  "_requiredBy": [
    "/magicli"
  ],
  "_resolved": "https://registry.npmjs.org/inspect-property/-/inspect-property-0.0.6.tgz",
  "_shasum": "5fce081e408fc9bc948e3cf625b6cdc3aa82eef7",
  "_shrinkwrap": null,
  "_spec": "inspect-property@0.0.6",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/magicli",
  "author": {
    "name": "Diego ZoracKy",
    "email": "diego.zoracky@gmail.com",
    "url": "https://github.com/DiegoZoracKy/"
  },
  "dependencies": {
    "for-each-property": "0.0.4",
    "for-each-property-deep": "0.0.3",
    "inspect-function": "^0.3.1"
  },
  "description": "Inspects a Property and returns useful informations about it (e.g. nested properties, function inspection, property descriptor, value, type, constructor)",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-LgjHkRl9W6bj2n+kWrAOgvCYPTYt+LanE4rtd/vKNq6yEb+SvVV7UTLzoSPpDX6/U1cAz7VfqPr+lPAIz7wHaQ==",
    "shasum": "5fce081e408fc9bc948e3cf625b6cdc3aa82eef7",
    "tarball": "https://registry.npmjs.org/inspect-property/-/inspect-property-0.0.6.tgz"
  },
  "gitHead": "afd503e07e7d5677471af5e726b1f481cdefda45",
  "keywords": [
    "inspect",
    "property",
    "api",
    "methods",
    "properties"
  ],
  "license": "MIT",
  "main": "lib/inspect-property.js",
  "maintainers": [
    {
      "name": "diegozoracky",
      "email": "diego.zoracky@gmail.com"
    }
  ],
  "name": "inspect-property",
  "optionalDependencies": {},
  "readme": "# inspect-property\n\n[![Build Status](https://api.travis-ci.org/DiegoZoracKy/inspect-property.svg)](https://travis-ci.org/DiegoZoracKy/inspect-property) [![npm](https://img.shields.io/npm/v/inspect-property.svg)]() [![npm](https://img.shields.io/npm/l/inspect-property.svg)]()\n\nInspects a Property and returns useful informations about it (e.g. nested properties, function inspection, property descriptor, value, type, constructor)\n\n## Installation\n\n```bash\nnpm install inspect-property\n```\n\n## Usage\n```javascript\ninspectProperty(o, propertyName, { delimiter = '.', inspectFunction = true, inspectProperties = true, enumerability, inherited} = {} );\n```\n **o**:\n Object || Property || Value to be inspected.\n\n **propertyName**:\n When passing as `inspectProperty(parentObject, 'childPropertyName')`, `propertyDescriptor` will be returned. Note that `childPropertyName` must be a `string`.\n\n **delimiter**\n What will be used as a delimiter for the nested properties at `properties` keys. Default is `','` e.g. `'a.b.c'`\n\n **inspectFunction**\n If functions should be inspected. See [inspect-function](https://github.com/DiegoZoracKy/inspect-function) for details about the function inspection.\n\n**inspectProperties**\nWhen set to false, `properties` will be a simple `{key: value}` object, without any inspection. The default value is `true`, returning `{key: inspectProperty(value)}`.\n\n **path**\n An array representing the current property path. e.g. from the above example it will be `[ 'a', 'b', 'c' ]` for the `'c'` property\n\n **parent**\n The parent object of the current property. e.g. from the above example it will be the object `{ c: 'cValue' }` for the `'c'` property\n\n **enumerability**:\n When inspecting nested properties, defines how it should look up regarding `enumerability`.\n The options are:\n  * `'enumerable'` *(default)*\n  * `'nonenumerable'`\n  * `'all'`\n\n **inherited**:\n Determines if it should look up on the prototype chain when inspecting nested properties.\n The options are:\n  * `true` *(default)*\n  * `false`\n\n## Example\n```javascript\nconst inspectProperty = require('../');\n\nconst data = {\n\ta: {\n\t\tb: {\n\t\t\tc: (z = 'DefaultX', k) => z+k\n\t\t},\n\t\td: 3,\n\t\tf: {\n\t\t\tg: 'h'\n\t\t}\n\t}\n};\n\nconst result = inspectProperty(data);\n\n////////////\n// RESULT //\n////////////\n// Below is a JSON.stringify(result), so functions references are ommitted\n\n{\n    \"value\": {\n        \"a\": {\n            \"b\": {},\n            \"d\": 3,\n            \"f\": {\n                \"g\": \"h\"\n            }\n        }\n    },\n    \"type\": \"object\",\n    \"constructor\": {\n        \"name\": \"Object\"\n    },\n    \"properties\": {\n        \"a\": {\n            \"value\": {\n                \"b\": {},\n                \"d\": 3,\n                \"f\": {\n                    \"g\": \"h\"\n                }\n            },\n            \"type\": \"object\",\n            \"constructor\": {\n                \"name\": \"Object\"\n            },\n            \"properties\": {\n                \"b\": {},\n                \"d\": 3,\n                \"f\": {\n                    \"g\": \"h\"\n                },\n                \"f.g\": \"h\"\n            }\n        },\n        \"a.b\": {\n            \"value\": {},\n            \"type\": \"object\",\n            \"constructor\": {\n                \"name\": \"Object\"\n            },\n            \"properties\": {}\n        },\n        \"a.b.c\": {\n            \"type\": \"function\",\n            \"constructor\": {\n                \"name\": \"Function\"\n            },\n            \"functionInspection\": {\n                \"name\": \"c\",\n                \"signature\": \"c(z = 'DefaultX', k);\",\n                \"parameters\": [\n                    {\n                        \"parameter\": \"z\",\n                        \"defaultValue\": \"DefaultX\",\n                        \"declaration\": \"z = 'DefaultX'\"\n                    },\n                    {\n                        \"parameter\": \"k\",\n                        \"declaration\": \"k\"\n                    }\n                ],\n                \"parametersNames\": [\n                    \"z\",\n                    \"k\"\n                ]\n            },\n            \"properties\": {}\n        },\n        \"a.d\": {\n            \"value\": 3,\n            \"type\": \"number\",\n            \"constructor\": {\n                \"name\": \"Number\"\n            }\n        },\n        \"a.f\": {\n            \"value\": {\n                \"g\": \"h\"\n            },\n            \"type\": \"object\",\n            \"constructor\": {\n                \"name\": \"Object\"\n            },\n            \"properties\": {\n                \"g\": \"h\"\n            }\n        },\n        \"a.f.g\": {\n            \"value\": \"h\",\n            \"type\": \"string\",\n            \"constructor\": {\n                \"name\": \"String\"\n            }\n        }\n    }\n}",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha ./test/main.test.js",
    "test:all": "mocha ./test -b"
  },
  "version": "0.0.6"
}
