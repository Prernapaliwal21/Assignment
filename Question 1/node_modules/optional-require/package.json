{
  "_args": [
    [
      {
        "raw": "optional-require@^1.1.8",
        "scope": null,
        "escapedName": "optional-require",
        "name": "optional-require",
        "rawSpec": "^1.1.8",
        "spec": ">=1.1.8 <2.0.0",
        "type": "range"
      },
      "/home/prerna/Desktop/Assignment/node_modules/mongodb"
    ]
  ],
  "_from": "optional-require@^1.1.8",
  "_hasShrinkwrap": false,
  "_id": "optional-require@1.1.8",
  "_location": "/optional-require",
  "_nodeVersion": "14.17.6",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/optional-require_1.1.8_1632291256154_0.4258928964684159"
  },
  "_npmUser": {
    "name": "jchip",
    "email": "joel123@gmail.com"
  },
  "_npmVersion": "6.14.15",
  "_phantomChildren": {},
  "_requested": {
    "raw": "optional-require@^1.1.8",
    "scope": null,
    "escapedName": "optional-require",
    "name": "optional-require",
    "rawSpec": "^1.1.8",
    "spec": ">=1.1.8 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mongodb"
  ],
  "_resolved": "https://registry.npmjs.org/optional-require/-/optional-require-1.1.8.tgz",
  "_shasum": "16364d76261b75d964c482b2406cb824d8ec44b7",
  "_shrinkwrap": null,
  "_spec": "optional-require@^1.1.8",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/mongodb",
  "author": {
    "name": "Joel Chen"
  },
  "bugs": {
    "url": "https://github.com/jchip/optional-require/issues"
  },
  "dependencies": {
    "require-at": "^1.0.6"
  },
  "description": "NodeJS Require that let you handle module not found error without try/catch",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-jq83qaUb0wNg9Krv1c5OQ+58EK+vHde6aBPzLvPPqJm89UQWsvSuFy9X/OSNJnFeSOKo7btE0n8Nl2+nE+z5nA==",
    "shasum": "16364d76261b75d964c482b2406cb824d8ec44b7",
    "tarball": "https://registry.npmjs.org/optional-require/-/optional-require-1.1.8.tgz",
    "fileCount": 7,
    "unpackedSize": 22664,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh219eCRA9TVsSAnZWagAAzUIP/1K9C+cIE/kB4e57yoR/\nrchKFArmDJEKQwWvyLDRDKPADTTiQW8LTvctxDciiqf6rrwLMgNVs0zflIXK\nbMHPUj77hpeEUSmk8MUJ7J2zWKwXKbJZjWB2gZCWsP+fiRsvVUWTeNND6x2H\nhiqG6l3gvwXubxjePeRrjvt5lpuf4yZdd10J1Th6S5/PrBA2iI2I7FPLna5y\nH5ilI2Iwi12Gj4yCBCA9azIckeZti5B8Eu/Ib5TNPbJ1fnO8N3yg7DFeSeX0\n0hholtzNkHDae3bkypf5+XB1/Xb/PCNzxkFUkWDf8Um2RxOX1j4yVUCs95mh\nvZ6h0L+3EgWSTEKWnuaOzEycuRHYIYdzQhaM/C4i58Mt5SI0J3cC1fshp2Gn\nKepFR38bmUfkp6XrOoBuM3Pca80mOihvyyw83r5+XQXdmbkL+TxORfP6qLE5\nKSTlyuf3ZLzwLFo+c2bgdfx8hKNAmpHiY4mvSUvIgcDKuElvzdWe39EvvYhZ\n0e7i9LclHDIJczJ8ECnID7JB91l7CaoylzcvJ1MvHhFc4Y6oHhwp5W2LI885\nyoFNP2fIYr/fDEkus0PTFTBhFYxYXc7i4N1udMn47m8XQ6ksCjRe01LMry+V\nWqniBcRBme2m8jRjy7zCMppHkijLbA20OUehROw3HPv2OgUL/zB7FkaRhQnI\nuIUV\r\n=o3qP\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "dist",
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "977328d6e8a342fc214805586a32cb0044890640",
  "homepage": "https://github.com/jchip/optional-require#readme",
  "keywords": [
    "optional require",
    "optional",
    "require"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jchip",
      "email": "joel123@gmail.com"
    }
  ],
  "name": "optional-require",
  "optionalDependencies": {},
  "readme": "[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]\n[![Dependency Status][daviddm-image]][daviddm-url] [![devDependency Status][daviddm-dev-image]][daviddm-dev-url]\n\n# Optional Require\n\nnode.js require that let you handle module not found error without try/catch. Allows you to gracefully require a module only if it exists and contains no error.\n\n## Why not try/catch?\n\nSo why not just do:\n\n```ts\nlet some;\ntry {\n  some = require(\"some-optional-module\");\n} catch {\n  // do nothing\n}\n```\n\n1. You need to keep the variable outside: `let some` before try/catch\n2. If `\"some-optional-module\"` contains error itself, above code will silently ignore it, leaving you, and more importantly, your users, puzzling on why it's not working.\n\n## Usage\n\nTypeScript:\n\n```ts\nimport { optionalRequire } from \"optional-require\";\n\nconst some = optionalRequire(\"some-optional-module\");\n```\n\nJavaScript:\n\n```js\nconst { optionalRequire } = require(\"optional-require\");\n\nconst foo = optionalRequire(\"foo\") || {};\nconst bar = optionalRequire(\"bar\", true); // true enables console.log a message when not found\nconst xyz = optionalRequire(\"xyz\", \"test\"); // \"test\" enables console.log a message with \"test\" added.\nconst fbPath = optionalRequire.resolve(\"foo\", \"foo doesn't exist\");\n// relative module path works - *but* you need to pass in `require` from your file\nconst rel = optionalRequire(\"../foo/bar\", { require });\n```\n\n### Binding `require`\n\nThe default `optionalRequire` uses `require` from the context of this module. While you can pass in your `require` in `options`, if you want to create your own function that's bound to your `require`, you can do it with `makeOptionalRequire`:\n\n```ts\nimport { makeOptionalRequire } from \"optional-require\";\n\nconst optionalRequire = makeOptionalRequire(require);\n\n// now you can optional require files in same dir as your file\nconst myModule = optionalRequire(\"./my-module\");\n```\n\n### Legacy Usage\n\nIn older versions, this module exports `makeOptionalRequire` directly and this is the legacy usage in JavaScript, which is still supported:\n\n```js\nconst optionalRequire = require(\"optional-require\")(require);\n\nconst foo = optionalRequire(\"foo\") || {};\nconst bar = optionalRequire(\"bar\", true); // true enables console.log a message when not found\nconst xyz = optionalRequire(\"xyz\", \"test\"); // \"test\" enables console.log a message with \"test\" added.\nconst fbPath = optionalRequire.resolve(\"foo\", \"foo doesn't exist\");\nconst rel = optionalRequire(\"../foo/bar\"); // relative module path works\n```\n\n## API\n\n<https://jchip.github.io/optional-require/modules.html#optionalrequire>\n\n# LICENSE\n\nApache-2.0 Â© [Joel Chen](https://github.com/jchip)\n\n[travis-image]: https://travis-ci.org/jchip/optional-require.svg?branch=master\n[travis-url]: https://travis-ci.org/jchip/optional-require\n[npm-image]: https://badge.fury.io/js/optional-require.svg\n[npm-url]: https://npmjs.org/package/optional-require\n[daviddm-image]: https://david-dm.org/jchip/optional-require/status.svg\n[daviddm-url]: https://david-dm.org/jchip/optional-require\n[daviddm-dev-image]: https://david-dm.org/jchip/optional-require/dev-status.svg\n[daviddm-dev-url]: https://david-dm.org/jchip/optional-require?type=dev\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jchip/optional-require.git"
  },
  "scripts": {
    "build": "tsc",
    "coverage": "xrun --serial build xarc/test-cov",
    "docs": "xrun xarc/docs && touch docs/.nojekyll",
    "postpack": "publish-util-postpack",
    "prepublishOnly": "xrun --serial [[build, docs], xarc/check, publish-util-pre]",
    "publish-util-pre": "publish-util-prepublishonly",
    "test": "xrun --serial build xarc/test-only"
  },
  "types": "index.d.ts",
  "version": "1.1.8"
}
