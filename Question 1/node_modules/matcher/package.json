{
  "_args": [
    [
      {
        "raw": "matcher@^1.1.1",
        "scope": null,
        "escapedName": "matcher",
        "name": "matcher",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/home/prerna/Desktop/Assignment/node_modules/ava"
    ]
  ],
  "_from": "matcher@^1.1.1",
  "_hasShrinkwrap": false,
  "_id": "matcher@1.1.1",
  "_location": "/matcher",
  "_nodeVersion": "8.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/matcher_1.1.1_1527218795047_0.685635199476512"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "matcher@^1.1.1",
    "scope": null,
    "escapedName": "matcher",
    "name": "matcher",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ava"
  ],
  "_resolved": "https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
  "_shasum": "51d8301e138f840982b338b116bb0c09af62c1c2",
  "_shrinkwrap": null,
  "_spec": "matcher@^1.1.1",
  "_where": "/home/prerna/Desktop/Assignment/node_modules/ava",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/matcher/issues"
  },
  "dependencies": {
    "escape-string-regexp": "^1.0.4"
  },
  "description": "Simple wildcard matching",
  "devDependencies": {
    "ava": "*",
    "matcha": "^0.7.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+BmqxWIubKTRKNWx/ahnCkk3mG8m7OturVlqq6HiojGJTd5hVYbgZm6WzcYPCoB+KBT4Vd6R7WSRG2OADNaCjg==",
    "shasum": "51d8301e138f840982b338b116bb0c09af62c1c2",
    "tarball": "https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
    "fileCount": 4,
    "unpackedSize": 5277,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbB4JrCRA9TVsSAnZWagAA7OcP/1ZWFL+1pd9Xg9+FBrOX\n5KyGJ3T2dCDrZNvGm5tBE20qf1b8ub8uLy3BOTQfVXsbVh7RGc0HH2kZlUcM\n7VPwt1Hxjs+Hv6pUkOCypadhmxgCrWu+s4tZ3cf7y8U1MIEqpfjTX/EA0K3s\ntAHE7/PubtpOCiF7HNtY6Bh7a5+2T8SyKdQTmcJ+hbywNOtOdZVQ86F8v9Gv\nqhKA0cPa37oc6t54NMfeF54hliZ/mxG849of9SbIh23MDAHD0CyBEv3uhbYJ\nN80rPW+Sm51knyrws4rVSTjJ+7xHw3B3uERK5zdworn+cf/waqZHjsnPfkVr\nSCxFkLUoDg+erz1sNgogAtmt6Fi90cJpSGij+xF0PYiWwlHd378I2Xh3/IeJ\nm2CjK2PGHDjb3rS26hG1AE8FjwKdVsC/8UfEeCknYvBRnNybWexeY36NC6Hl\nnIbwLjOSqFtdMy27GY+oJ0ftA7n/I33jrdCJou+KgNQx+t7iOKrlZfwfeR+W\nPR0RyESBcwdo3/bKDNfCkZhzhG9ZKJvlzIRNvUxaWNSBWUNOOPDedCuDHlaR\nFo5HiwmTizJ/u40UJvoYEV/G6kEINuUbxrtVf6Cby/aRZHIhamSdK4vKBgHQ\nOobWsv4Xo675yr4AR8JHfOwjN/zg5gnElkaPastS1XhQG50L+1JGNNfnGqd2\n7M88\r\n=vbZ3\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "ceb35a277e4531a6c032d16e8f98585855ec1556",
  "homepage": "https://github.com/sindresorhus/matcher#readme",
  "keywords": [
    "matcher",
    "matching",
    "match",
    "regex",
    "regexp",
    "regular",
    "expression",
    "wildcard",
    "pattern",
    "string",
    "filter",
    "glob",
    "globber",
    "globbing",
    "minimatch"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "matcher",
  "optionalDependencies": {},
  "readme": "# matcher [![Build Status](https://travis-ci.org/sindresorhus/matcher.svg?branch=master)](https://travis-ci.org/sindresorhus/matcher)\n\n> Simple [wildcard](https://en.wikipedia.org/wiki/Wildcard_character) matching\n\nUseful when you want to accept loose string input and regexes/globs are too convoluted.\n\n\n## Install\n\n```\n$ npm install matcher\n```\n\n\n## Usage\n\n```js\nconst matcher = require('matcher');\n\nmatcher(['foo', 'bar', 'moo'], ['*oo', '!foo']);\n//=> ['moo']\n\nmatcher(['foo', 'bar', 'moo'], ['!*oo']);\n//=> ['bar']\n\nmatcher.isMatch('unicorn', 'uni*');\n//=> true\n\nmatcher.isMatch('unicorn', '*corn');\n//=> true\n\nmatcher.isMatch('unicorn', 'un*rn');\n//=> true\n\nmatcher.isMatch('rainbow', '!unicorn');\n//=> true\n\nmatcher.isMatch('foo bar baz', 'foo b* b*');\n//=> true\n\nmatcher.isMatch('unicorn', 'uni\\\\*');\n//=> false\n\nmatcher.isMatch('UNICORN', 'UNI*', {caseSensitive: true});\n//=> true\n\nmatcher.isMatch('UNICORN', 'unicorn', {caseSensitive: true});\n//=> false\n```\n\n\n## API\n\n### matcher(inputs, patterns, [options])\n\nAccepts an array of `input`'s and `pattern`'s.\n\nReturns an array of `inputs` filtered based on the `patterns`.\n\n### matcher.isMatch(input, pattern, [options])\n\nReturns a boolean of whether the `input` matches the `pattern`.\n\n#### input\n\nType: `string`\n\nString to match.\n\n#### options\n\nType: `Object`\n\n##### caseSensitive\n\nType: `boolean`<br>\nDefault: `false`\n\nTreat uppercase and lowercase characters as being the same.\n\nEnsure you use this correctly. For example, files and directories should be matched case-insensitively, while most often, object keys should be matched case-sensitively.\n\n#### pattern\n\nType: `string`\n\nUse `*` to match zero or more characters. A pattern starting with `!` will be negated.\n\n\n## Benchmark\n\n```\n$ npm run bench\n```\n\n\n## Related\n\n- [multimatch](https://github.com/sindresorhus/multimatch) - Extends `minimatch.match()` with support for multiple patterns\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/matcher.git"
  },
  "scripts": {
    "bench": "matcha bench.js",
    "test": "xo && ava"
  },
  "version": "1.1.1"
}
